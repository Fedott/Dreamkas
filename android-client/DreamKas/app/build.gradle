apply plugin: 'com.android.application'
apply plugin: 'android-apt'


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.stanfy.spoon:spoon-gradle-plugin:0.10.0'
    }
}

apply plugin: 'spoon'

repositories {
    maven {
        url "${System.getenv("ANDROID_HOME")}/extras/android/m2repository"
    }
    mavenCentral()
    jcenter()
}

android
{
    compileSdkVersion 19
    buildToolsVersion '20.0.0'

    lintOptions
    {
        abortOnError false
    }

    packagingOptions
    {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
    }

    defaultConfig
    {
        applicationId 'ru.dreamkas.pos'
        minSdkVersion 17
        targetSdkVersion 19

        //def host = "http://av.staging.api.lighthouse.pro"
        def host = "http://android.autotests.api.lighthouse.pro"
        if(project.hasProperty("server_address")){
            host = project.getProperty("server_address");
        }
        buildConfigField 'String', 'ServerAddress', '"' + host  + '"'
        versionCode 1
        versionName '0.113.4'
        testInstrumentationRunner 'com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner'
    }

    sourceSets {


        main {
            androidTest.setRoot('src/androidTest')
            res.srcDirs = [
                    'src/main/res',
                    'src/main/res/layouts',
                    'src/main/res/layouts/activities',
                    'src/main/res/layouts/components',
                    'src/main/res/layouts/fragments',
                    'src/main/res/layouts/dialog_fragments',
                    'src/main/res/layouts/item_templates',
                    'src/main/res/layouts/misc'
            ]
        }
    }

    testOptions
    {
        reportDir = "$project.buildDir/reports/"
    }

    buildTypes
    {
        release
        {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug
        {
            applicationIdSuffix ".debug"
        }
    }
}

apt
{
    arguments
    {
        resourcePackageName android.defaultConfig.packageName
        androidManifestFile variant.processResources.manifestFile
    }
}

spoon
{
    debug = true;
    noAnimation = true;
    if (project.hasProperty('spoonClassName')) {
        className = project.spoonClassName

    }
}

dependencies
        {
            provided 'com.jakewharton.espresso:espresso-support-v4:1.1-r3'
            androidTestCompile('com.jakewharton.espresso:espresso-support-v4:1.1-r3') {
                exclude group: 'com.android.support', module: 'support-v4'
            }
            androidTestCompile 'com.google.guava:guava:11.0.2'
            androidTestCompile 'com.squareup.spoon:spoon-client:1.1.0'
            androidTestCompile 'com.surftools:BeanstalkClient:1.4.6'
            apt "org.androidannotations:androidannotations:3.0"
            compile 'com.android.support:support-v4:19.0.0'
            compile 'com.octo.android.robospice:robospice:1.4.12'
            compile 'com.octo.android.robospice:robospice-spring-android:1.4.12'
            compile 'org.springframework.android:spring-android-rest-template:1.0.1.RELEASE'
            compile 'com.fasterxml.jackson.core:jackson-databind:2.4.0'
            compile 'org.androidannotations:androidannotations-api:3.0'
            compile 'com.google.zxing:core:3.0.0'
            compile project(':materialDesign')
            compile (project(':materialEditText')){
                exclude group: 'com.nineoldandroids', module: 'library'
            }
        }



